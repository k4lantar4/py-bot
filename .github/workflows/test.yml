name: Test Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-django pytest-cov pytest-xdist pytest-html safety bandit

    - name: Install Node.js dependencies
      working-directory: frontend
      run: npm ci

    - name: Run backend tests
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0
      run: |
        cd backend
        pytest \
          --cov=. \
          --cov-report=xml \
          --cov-report=html \
          --html=reports/test_report.html \
          --self-contained-html \
          -v \
          --maxfail=10 \
          -n auto

    - name: Run frontend tests
      working-directory: frontend
      run: npm test -- --coverage --watchAll=false --ci

    - name: Run security checks
      run: |
        safety check
        bandit -r backend/ -f json -o security-report.json

    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: test-coverage
        path: |
          backend/coverage.xml
          frontend/coverage
          backend/reports/test_report.html
          security-report.json

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: backend/coverage.xml,frontend/coverage/coverage-final.json
        flags: backend,frontend 